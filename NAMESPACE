#exportPattern("^[[:alpha:]]+")
useDynLib(ct)
importFrom(Rcpp, sourceCpp)

## Before field
export(ct_survey_design)
## Prepare media file
export(ct_app)
export(ct_get_metadata) #ok
export(ct_get_hs) #ok
export(ct_create_hs)#ok
export(ct_remove_hs) #ok

## Prepare table
export(ct_read) #ok
export(ct_stack_df) #ok
export(ct_check_location)#ok
export(ct_independence) #ok
export(ct_to_radian)
export(ct_solartime)
export(ct_to_time)
export(ct_to_community) #ok
export(ct_standardize)
export(ct_check_name)
export(ct_to_occupancy)
export(ct_find_break)
export(ct_correct_datetime)
export(ct_get_effort) #no
export(ct_traprate_data) # no

## Analysis
export(ct_describe_df)
export(ct_plot_density)
export(ct_plot_overlap)#ok
export(ct_plot_overlap_coef)
export(ct_plot_rose_diagram)
export(ct_plot_camtrap_activity)
export(ct_overlap_estimates)
export(ct_bootstrap)
export(ct_resample)
export(ct_boot_estimates)
export(ct_boot_ci)
export(ct_ci)
export(ct_overlap_matrix)
export(ct_temporal_shift)
export(ct_alpha_diversity)
export(ct_dissimilarity)
export(ct_spatial_coverage)
export(ct_summarise_camtrap_activity)
export(ct_traprate_estimate) ## no
export(ct_fit_activity) #no
export(ct_fit_speedmodel) #no
export(ct_fit_detmodel) #no
export(ct_fit_rem) # no


## General
export(`%>%`)
export(`%<>%`)


########### Import ##############

# exifr
importFrom(exifr, exiftool_call)
importFrom(exifr, read_exif)


# base
importFrom("methods", "hasArg")
importFrom("stats", "aggregate", "as.formula", "qt", "sd", "window",
           "end", "predict", "quantile", "start", "setNames",
           "cov")
importFrom("utils", "install.packages", "installed.packages", "read.table",
           "write.csv", "head")

# dplyr
importFrom(dplyr, as_tibble)
importFrom(dplyr, arrange)
importFrom(dplyr, mutate)
importFrom(dplyr, tibble)
importFrom(dplyr, rename)
importFrom(dplyr, bind_rows)
importFrom(dplyr, bind_cols)
importFrom(dplyr, relocate)
importFrom(dplyr, left_join)
importFrom(dplyr, count)
importFrom(dplyr, ungroup)
importFrom(dplyr, enquos)
importFrom(dplyr, sym)
importFrom(dplyr, syms)
importFrom(dplyr, ensym)
importFrom(dplyr, ensyms)

#rlang
importFrom(rlang, ":=")

#tidyr
importFrom(tidyr, pivot_wider)

# magrittr
importFrom(magrittr, '%>%')
importFrom(magrittr, '%<>%')

# ggplot
importFrom(ggplot2, ggplot)
importFrom(ggplot2, aes)
importFrom(ggplot2, geom_polygon)
importFrom(ggplot2, geom_point)
importFrom(ggplot2, geom_text)
importFrom(ggplot2, labs)
importFrom(ggplot2, theme_minimal)
importFrom(ggplot2, theme)
importFrom(ggplot2, element_line)
importFrom(ggplot2, element_blank)
importFrom(ggplot2, element_text)
importFrom(ggplot2, geom_line)
importFrom(ggplot2, geom_rug)
importFrom(ggplot2, annotate)
importFrom(ggplot2, scale_x_continuous)
importFrom(ggplot2, scale_size_continuous)
importFrom(ggplot2, scale_color_gradientn)
importFrom(ggplot2, guides)
importFrom(ggplot2, guide_colorbar)


#shiny
importFrom(shiny, shinyOptions)
importFrom(shiny, shinyApp)
importFrom(shiny, modalDialog)
importFrom(shiny, tagList)
importFrom(shiny, actionButton)
importFrom(shiny, icon)
importFrom(shiny, modalButton)
importFrom(shiny, fluidRow)
importFrom(shiny, column)
importFrom(shiny, checkboxInput)
importFrom(shiny, selectInput)
importFrom(shiny, verbatimTextOutput)
importFrom(shiny, showModal)
importFrom(shiny, reactive)
importFrom(shiny, eventReactive)
importFrom(shiny, renderText)
importFrom(shiny, req)
importFrom(shiny, strong)
importFrom(shiny, h2)
importFrom(shiny, shinyOptions)
importFrom(shiny, shinyOptions)
importFrom(shiny, shinyOptions)
importFrom(shiny, shinyOptions)
importFrom(shiny, br)
importFrom(shiny, hr)
importFrom(shiny, conditionalPanel)
importFrom(shiny, numericInput)
importFrom(shiny, renderPrint)
importFrom(shiny, renderPlot)
importFrom(shiny, tabsetPanel)
importFrom(shiny, tabPanel)
importFrom(shiny, plotOutput)
importFrom(shiny, observe)
importFrom(shiny, updateNumericInput)
importFrom(shiny, reactiveValues)
importFrom(shiny, eventReactive)
importFrom(shiny, updateSelectInput )
importFrom(shiny, updateTextInput)
importFrom(shiny, observe)

#ds4Dash
importFrom("bs4Dash", "dashboardHeader")
importFrom("bs4Dash", "dashboardBody")
importFrom("bs4Dash", "dashboardPage")
importFrom("bs4Dash", "dashboardSidebar")

#leaflet
importFrom("leaflet", "leafletOutput")
importFrom("leaflet", "renderLeaflet")

#shinyFIles
importFrom("shinyFiles", "getVolumes")
importFrom("shinyFiles", "parseDirPath")
importFrom("shinyFiles", "parseFilePaths")
importFrom("shinyFiles", "parseSavePath")
importFrom("shinyFiles", "shinyDirButton")
importFrom("shinyFiles", "shinyDirChoose")
importFrom("shinyFiles", "shinyDirLink")
importFrom("shinyFiles", "shinyFileChoose")
importFrom("shinyFiles", "shinyFileSave")
importFrom("shinyFiles", "shinyFilesButton")
importFrom("shinyFiles", "shinySaveButton")

#shinyTree
importFrom("shinyTree", "renderTree")
importFrom("shinyTree", "shinyTree")

#overlap
importFrom(overlap, bootCI)
importFrom(overlap, bootCIlogit)
importFrom(overlap, bootEst)
importFrom(overlap, bootstrap)
importFrom(overlap, densityFit)
importFrom(overlap, densityPlot)
importFrom(overlap, getBandWidth)
importFrom(overlap, overlapEst)
importFrom(overlap, overlapPlot)
importFrom(overlap, overlapTrue)
importFrom(overlap, resample)
importFrom(overlap, sunTime)
importFrom(overlap, sunTime)

# sf
importFrom(sf, st_as_sf)
importFrom(sf, st_transform)
importFrom(sf, st_coordinates)

# terra
importFrom(terra, rast)
importFrom(terra, vect)
importFrom(terra, values)
importFrom(terra, as.polygons)
importFrom(terra, extend)
importFrom(terra, rasterize)
importFrom(terra, global)
importFrom(terra, mean)

# cli
importFrom(cli, cli_alert_danger)
importFrom(cli, cli_alert_danger)
importFrom(cli, cli_alert_success)
importFrom(cli, cli_alert_warning)
importFrom(cli, cli_format)
importFrom(cli, cli_text)

# Distance
importFrom(Distance, ds)

# sbd
importFrom(sbd, sbm)

# Vegan
