% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/CTDS.R
\name{ct_chi2_select}
\alias{ct_chi2_select}
\title{Select best detection function model by Chi-squared Goodness-of-fit}
\usage{
ct_chi2_select(models)
}
\arguments{
\item{models}{A list of fitted detection function models (objects returned by
\code{\link[Distance:ds]{Distance::ds()}} or \code{\link[=ct_fit_ds]{ct_fit_ds()}}).}
}
\value{
A tibble with one row per model containing:
\itemize{
\item \code{key}: The key function of the model.
\item \code{model}: The model name.
\item \code{criteria}: The chi-squared goodness-of-fit statistic
divided by its degrees of freedom, i.e. \eqn{\chi^2/\mathrm{df}}.
Lower values indicate better fit.
}
}
\description{
Compares detection function models with different key functions
using the ratio of the chi-squared statistic to its degrees of freedom.
This method selects the best model among different key functions after
the best adjustment term model is chosen for each key function.
}
\details{
If only one model is supplied, the function returns the chi-squared
goodness-of-fit ratio for that model and issues a warning that model
selection cannot be performed. For multiple models, each must have a unique key function.
This step is designed to be applied after selecting the best model within
each key function family using QAIC (see \code{\link[=ct_QAIC]{ct_QAIC()}}).
The model with the smallest chi-squared/df ratio is typically preferred.
}
\examples{
\donttest{
library(Distance)
library(dplyr)

data("duiker")
duiker_data <- duikers$DaytimeDistances \%>\%
  dplyr::slice_sample(prop = .3) # sample 30\% of rows
truncation <- list(left = 2, right = 15) # Keep only distance between 2-15 m

# fit hazard-rate key models
w3_hr0 <- ds(duiker_data, transect = "point", key = "hr", adjustment = NULL,
             truncation = truncation)
w3_hr1 <- ds(duiker_data, transect = "point", key = "hr", adjustment = "cos",
             order = 2, truncation = truncation)
w3_hr2 <- ds(duiker_data, transect = "point", key = "hr", adjustment = "cos",
             order = c(2, 4), truncation = truncation)
# fit half-normal key models
w3_hn0 <- ds(duiker_data, transect = "point", key = "hn", adjustment = NULL,
             truncation = truncation)
w3_hn1 <- ds(duiker_data, transect = "point", key = "hn", adjustment = "cos",
             order = 2, truncation = truncation)
w3_hn2 <- ds(duiker_data, transect = "point", key = "hn", adjustment = "cos",
             order = c(2, 4), truncation = truncation)
# fit uniform key models
w3_u0 <- ds(duiker_data, transect = "point", key = "unif", adjustment = NULL,
            truncation = truncation)
w3_u1 <- ds(duiker_data, transect = "point", key = "unif", adjustment = "cos",
            order = 2, truncation = truncation)
w3_u2 <- ds(duiker_data, transect = "point", key = "unif", adjustment = "cos",
            order = c(2, 4), truncation = truncation)

# Create model list
model_list <- list(w3_hn0, w3_hn1, w3_hn2,
                   w3_hr0, w3_hr1, w3_hr2,
                   w3_u0, w3_u1, w3_u2)

# Compute model QAICs
ct_QAIC(list(w3_hr0, w3_hr1, w3_hr2)) # All key functions must be the same
ct_QAIC(list(w3_hn0, w3_hn1, w3_hn2)) # All key functions must be the same

# Compute Chi-squared Goodness-of-fit
ct_chi2_select(list(w3_hn0, w3_hr0, w3_u0)) # All key functions must be different
ct_chi2_select(list(w3_hn2, w3_hr1, w3_u0)) # All key functions must be different

# Two-step model selection
ct_select_model(model_list)
}

}
\references{
Howe, E. J., Buckland, S. T., Després‐Einspenner, M., & Kühl, H. S. (2019).
Model selection with overdispersed distance sampling data. \strong{Methods in Ecology and Evolution},
10(1), 38-47. \doi{10.1111/2041-210X.13082}
}
