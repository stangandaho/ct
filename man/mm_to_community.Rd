% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mm_to_community.R
\name{mm_to_community}
\alias{mm_to_community}
\title{Convert Data to a Community Matrix}
\usage{
mm_to_community(
  data,
  site_column,
  species_column,
  size_column,
  values_fill = NULL
)
}
\arguments{
\item{data}{A data frame containing the input data.}

\item{site_column}{The column in the data frame representing site identifiers. Can be specified as a string or unquoted column name.}

\item{species_column}{The column in the data frame representing species identifiers. Can be specified as a string or unquoted column name.}

\item{size_column}{(Optional) The column representing the size or abundance of the species at each site. If not provided, counts of species occurrences are calculated.}

\item{values_fill}{(Optional) A value to fill missing cells in the resulting community matrix. Defaults to \code{NULL}.}
}
\value{
A tibble where rows represent sites, columns represent species, and values represent the count or abundance of each species.
}
\description{
The \code{to_community} function transforms input data into a community matrix where
rows represent sites, columns represent species, and values indicate the count
or abundance of each species at each site.
}
\details{
The function creates a site-by-species matrix suitable for ecological analysis.
If \code{size_column} is not provided, the function counts occurrences of each
species per site. If \code{size_column} is provided, its values are used as the
measure for species abundance.
}
\examples{
# Example data
df <- tibble(
  site = c("A", "A", "B", "B", "C"),
  species = c("sp1", "sp2", "sp1", "sp3", "sp2"),
  abundance = c(5, 2, 3, 1, 4)
)

# Convert to community matrix with counts
to_community(df, site_column = site, species_column = species)

# Convert to community matrix with abundance
to_community(df, site_column = site, species_column = species, size_column = abundance)

# Fill missing cells with 0
to_community(df, site_column = site, species_column = species, values_fill = 0)

}
